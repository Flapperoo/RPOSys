/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RentFinal;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

    
public class SearchByPriceRange extends SearchByClass {

    private MySqlClass mySQL = new MySqlClass();
    private ArrayList<Car> cars;    
    private String selectedMinPrice = "";
    private String selectedMaxPrice = "";
    private String selectedSortOrder = "";
    DefaultTableModel model;
    
    public SearchByPriceRange() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        UpdateButton = new javax.swing.JButton();
        AscendingOrderButton = new javax.swing.JButton();
        DescendingOrderButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Gill Sans MT", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "License Plate", "Brand", "Model", "Price", "Description"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        jLabel2.setText("Price Range:");

        jComboBox1.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Below 2,500", "2,500 to 4,999", "5,000 to 7,499", "7,500 to 9,999", "10,000 to 12,499", "12,500 to 14,999", "15,000 to 17,499", "17,500 to 20,000" }));

        UpdateButton.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        AscendingOrderButton.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        AscendingOrderButton.setText("Ascending");
        AscendingOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AscendingOrderButtonActionPerformed(evt);
            }
        });

        DescendingOrderButton.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        DescendingOrderButton.setText("Descending");
        DescendingOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescendingOrderButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(26, 70, 69));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search by Price Range");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(AscendingOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DescendingOrderButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateButton)
                    .addComponent(AscendingOrderButton)
                    .addComponent(DescendingOrderButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        onFormWindowOpen(jTable1,jComboBox1);
    }//GEN-LAST:event_formWindowOpened

    private void updateSelectedPriceRange(String selectedPriceRange){
          switch (selectedPriceRange){
              case "None":
                  selectedMinPrice = "0"; 
                  selectedMaxPrice = "20000";
                  break;
                  
              case "Below 2,500":
                  selectedMinPrice = "0"; //The reason it is a string is because it will be placed into a String query for MySQL, making it a string already removes the need to parse / convert.
                  selectedMaxPrice = "2499";
                  break;
                  
              case "2,500 to 4,999":
                  selectedMinPrice = "2500"; 
                  selectedMaxPrice = "4999";
                  break;
              
              case "5,000 to 7,499":
                  selectedMinPrice = "5000";
                  selectedMaxPrice = "7499";
                  break;
              case "7,500 to 9,999":
                  selectedMinPrice = "7500";
                  selectedMaxPrice = "9999";
                  break;
              case "10,000 to 12,499":
                  selectedMinPrice = "10000";
                  selectedMaxPrice = "12499";
                  break;
              case "12,500 to 14,999":
                  selectedMinPrice = "12500";
                  selectedMaxPrice = "14999";
                  break;
              case "15,000 to 17,499":
                  selectedMinPrice = "15000";
                  selectedMaxPrice = "17499";
                  break;
              case "17,500 to 20,000":
                  selectedMinPrice = "17500";
                  selectedMaxPrice = "20000";
                  break;
        }
    }
    
    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        onUpdateButtonActionPerformed(jTable1,jComboBox1);   
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void AscendingOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AscendingOrderButtonActionPerformed
        clearTable();
        String selectedPriceRange = jComboBox1.getSelectedItem().toString();
        selectedSortOrder = "ascending";
        
        updateSelectedPriceRange(selectedPriceRange);
            switch (selectedPriceRange){
            case "None":
            {
                cars = mySQL.ShowFilteredPriceRangeTable(selectedMinPrice, selectedMaxPrice, selectedSortOrder);;
                break;
            }                    
            default:
                cars = mySQL.ShowFilteredPriceRangeTable(selectedMinPrice, selectedMaxPrice, selectedSortOrder);
                break;
            
        }
        model = (DefaultTableModel) jTable1.getModel();
        for(Car c: cars)    
            model.addRow(new Object[] {c.getLicensePlate(), c.getBrand(), c.getModel(), c.getPrice(), c.getDescription()});
    
    }//GEN-LAST:event_AscendingOrderButtonActionPerformed

    private void DescendingOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescendingOrderButtonActionPerformed
        clearTable();
        String selectedPriceRange = jComboBox1.getSelectedItem().toString();
        selectedSortOrder = "descending";
        
        updateSelectedPriceRange(selectedPriceRange);
            switch (selectedPriceRange){
            case "None":
            {
                cars = mySQL.ShowFilteredPriceRangeTable(selectedMinPrice, selectedMaxPrice, selectedSortOrder);
                break;
            }                    
            default:
                cars = mySQL.ShowFilteredPriceRangeTable(selectedMinPrice, selectedMaxPrice, selectedSortOrder);
                break;
            
        }
        model = (DefaultTableModel) jTable1.getModel();
        for(Car c: cars)    
            model.addRow(new Object[] {c.getLicensePlate(), c.getBrand(), c.getModel(), c.getPrice(), c.getDescription()});
        
    }//GEN-LAST:event_DescendingOrderButtonActionPerformed

   public void clearTable()
    {
        model=(DefaultTableModel) jTable1.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged(); // notifies the JTable that the model has changed
    }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchByPriceRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchByPriceRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchByPriceRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchByPriceRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchByPriceRange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AscendingOrderButton;
    private javax.swing.JButton DescendingOrderButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void showList(JComboBox jComboBox1) {
    }

    @Override
    protected ArrayList<Car> setCarsToFilteredTable(String filter) {
        updateSelectedPriceRange(jComboBox1.getSelectedItem().toString());
        return mySQL.ShowFilteredPriceRangeTable(selectedMinPrice, selectedMaxPrice, selectedSortOrder);
    }
}
